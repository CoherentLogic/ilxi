;
;  ILXI eXtended Operating System - XOS 
;   Version 0.1
;   
;   Copyright (C) 2016 Coherent Logic Development
;
;   kernel.xa - kernel routines
;
    PROGRAM TITLE 'XOS'
    SECTION TEXT
    ORIGIN 0

    EQU PG_SYS 0                    ; system code page
    EQU PG_VID 1                    ; video buffer page
    EQU PG_DAT 0                    ; system data page
    EQU PG_DTA 2                    ; disk transfer area
    EQU PG_STK 10                   ; stack page
    
    BRANCH WORD {XOS_BOOT}          ; warm boot
    BRANCH WORD {XOS_HALT}          ; halt system
    
    BRANCH WORD {XOS_CON_INIT}      ; initialize console
    BRANCH WORD {XOS_CON_LOCATE}    ; set cursor position
    BRANCH WORD {XOS_CON_PRINTC}    ; print character
    BRANCH WORD {XOS_CON_PRINTL}    ; print line
    BRANCH WORD {XOS_CON_SCROLL}    ; scroll console
    
    BRANCH WORD {XOS_DISK_INIT}     ; initialize disk subsystem
    BRANCH WORD {XOS_DISK_SELECT}   ; select a disk
    BRANCH WORD {XOS_DISK_COUNT}    ; get count of disks
    BRANCH WORD {XOS_DISK_TRACKS}   ; get track count
    BRANCH WORD {XOS_DISK_SECTORS}  ; get count of sectors per track
    BRANCH WORD {XOS_DISK_SEEK}     ; seek to a track
    BRANCH WORD {XOS_DISK_READ}     ; read a sector
    BRANCH WORD {XOS_DISK_WRITE}    ; write a sector
    BRANCH WORD {XOS_DISK_FORMAT}   ; format a disk
    
    BRANCH WORD {XOS_FILE_FIND}     ; find a file
    BRANCH WORD {XOS_FILE_CREATE}   ; create a file
    BRANCH WORD {XOS_FILE_ERASE}    ; erase a file
    BRANCH WORD {XOS_FILE_OPEN}     ; open a file
    BRANCH WORD {XOS_FILE_READ}     ; read from a file
    BRANCH WORD {XOS_FILE_WRITE}    ; write to a file
    BRANCH WORD {XOS_FILE_SEEK}     ; seek to a position in a file
    BRANCH WORD {XOS_FILE_CLOSE}    ; close a file
    
    BRANCH WORD {XOS_MEM_SIZE}      ; get count of free bytes
    BRANCH WORD {XOS_MEM_ALLOC}     ; allocate bytes of memory
    BRANCH WORD {XOS_MEM_DEALLOC}   ; deallocate bytes of memory
    
    BRANCH WORD {XOS_IMG_LOAD}      ; load an image into memory
    BRANCH WORD {XOS_IMG_START}     ; start a loaded image
    
    
    VAR WORD CON_PTR 1              ; console pointer
    VAR ZSTRING BOOTMSG "ILXI XOS 0.1"


    INCLUDE console.xa
    INCLUDE disk.xa
    INCLUDE file.xa
    INCLUDE mem.xa
    INCLUDE img.xa
    

    
LABEL XOS_BOOT
    COPY WORD %DP,{PG_DAT}      ; initialize data page
    COPY WORD %SP,{PG_STK}      ; initialize stack page
    
    COPY WORD %SS,%DP           ; point SS:SI to BOOTMSG
    COPY WORD %SI,{BOOTMSG}
    SCALL WORD {XOS_CON_PRINT}  ; call print routine

